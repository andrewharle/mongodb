Description: prevent group and other access on .dbshell
 Use umask on file creation and chmod on existing file load.
Forwarded: no
Bug-Debian: https://bugs.debian.org/832908
Author: Laszlo Boszormenyi (GCS) <gcs@debian.org>
Last-Update: 2016-08-04

---

--- a/src/mongo/shell/linenoise.cpp
+++ b/src/mongo/shell/linenoise.cpp
@@ -101,6 +101,7 @@
 #include <stdlib.h>
 #include <string.h>
 #include <sys/ioctl.h>
+#include <sys/stat.h>
 #include <sys/types.h>
 #include <termios.h>
 #include <unistd.h>
@@ -2762,7 +2763,9 @@
 /* Save the history in the specified file. On success 0 is returned
  * otherwise -1 is returned. */
 int linenoiseHistorySave(const char* filename) {
+    mode_t old_umask;
     FILE* fp;
+    old_umask = umask(S_IRWXG | S_IRWXO);
 #if _POSIX_C_SOURCE >= 1 || _XOPEN_SOURCE || _POSIX_SOURCE || defined(__APPLE__)
     int fd = open(filename, O_WRONLY | O_TRUNC | O_CREAT, S_IRUSR | S_IWUSR);
     if (fd == -1) {
@@ -2773,6 +2776,7 @@
 #else
     fp = fopen(filename, "wt");
 #endif  // _POSIX_C_SOURCE >= 1 || _XOPEN_SOURCE || _POSIX_SOURCE || defined(__APPLE__)
+    umask(old_umask);
     if (fp == NULL) {
         return -1;
     }
@@ -2797,6 +2801,8 @@
         return -1;
     }
 
+    chmod(filename, 00600);
+
     char buf[LINENOISE_MAX_LINE];
     while (fgets(buf, LINENOISE_MAX_LINE, fp) != NULL) {
         char* p = strchr(buf, '\r');
