# Copyright (C) 2018-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
    cpp_namespace: "mongo"
    cpp_includes:
        - "mongo/s/shard_id.h"
        - "mongo/util/net/hostandport.h"
        - "mongo/db/query/cursor_response.h"

imports:
    - "mongo/db/logical_session_id.idl"
    - "mongo/db/query/tailable_mode.idl"
    - "mongo/idl/basic_types.idl"
    - "mongo/util/net/hostandport.idl"

types:
    CursorResponse:
        bson_serialization_type: object
        description: The first batch returned after establishing cursors on a shard.
        cpp_type: CursorResponse
        serializer: CursorResponse::toBSONAsInitialResponse
        deserializer: CursorResponse::parseFromBSONThrowing

structs:
    RemoteCursor:
        description: A description of a cursor opened on a remote server.
        fields:
            shardId:
                type: string
                description: The shardId of the shard on which the cursor resides.
            hostAndPort:
                type: HostAndPort
                description: The exact host (within the shard) on which the cursor resides.
            cursorResponse:
                type: CursorResponse
                description: The response after establishing a cursor on the remote shard, including
                             the first batch.

    AsyncResultsMergerParams:
        description: The parameters needed to establish an AsyncResultsMerger.
        chained_structs:
            OperationSessionInfo : OperationSessionInfo
        fields:
            sort:
                type: object
                description: The sort requested on the merging operation. Empty if there is no sort.
                optional: true
            compareWholeSortKey:
                type: bool
                default: false
                description: >-
                    When 'compareWholeSortKey' is true, $sortKey is a scalar value, rather than an
                    object. We extract the sort key {$sortKey: <value>}. The sort key pattern is
                    verified to be {$sortKey: 1}.
            remotes: array<RemoteCursor>
            tailableMode:
                type: TailableMode
                optional: true
                description: If set, the tailability mode of this cursor.
            batchSize:
                type: safeInt64
                optional: true
                description: The batch size for this cursor.
            nss: namespacestring
            allowPartialResults:
                type: bool
                default: false
                description: If set, error responses are ignored.
