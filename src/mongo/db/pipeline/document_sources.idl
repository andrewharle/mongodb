# Copyright (C) 2018-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

# Document source pipeline stage IDL file

global:
   cpp_namespace: "mongo"
   cpp_includes:
       - "mongo/db/pipeline/resume_token.h"

imports:
    - "mongo/idl/basic_types.idl"

types:
    # A resume token is an opaque document we return to the user that contains all the information
    # needed to resume a stream where they left off.  It also provides the ordering of streams
    # from multiple shards.
    resumeToken:
        bson_serialization_type: object
        description: An object representing a resume token for a change stream
        cpp_type: ResumeToken
        # The IDL requires a serializer for any custom type. The serializer for this type actually
        # needs to know which format to use though, so requires an argument which is not currently
        # supported by the IDL. We don't expect anyone to use the IDL to serialize the type, so we
        # just provide a dummy serializer here.
        serializer: ResumeToken::toBSON_do_not_use
        deserializer: ResumeToken::parse

    # The document key element in a resume token can be any BSON element, so we need a custom type
    # which leaves it as a BSONElement
    resumeTokenDocumentKey:
        bson_serialization_type: any
        description: The document id contained within a resume token
        cpp_type: Value
        serializer: Value::serializeForIDL
        deserializer: Value::deserializeForIDL


structs:
  ResumeTokenClusterTime:
      description: The IDL type of cluster time
      fields:
          ts:
            cpp_name: timestamp
            type: timestamp
            description: The timestamp of the logical time

  DocumentSourceChangeStreamSpec:
      description: A document used to specify the $changeStream stage of an aggregation
                   pipeline.
      fields:
          resumeAfter:
              cpp_name: resumeAfter
              type: resumeToken
              optional: true
              description: An object representing the point at which we should resume reporting
                           changes from.
          $_resumeAfterClusterTime:
              cpp_name: resumeAfterClusterTimeDeprecated
              type: ResumeTokenClusterTime
              optional: true
              description: The cluster time after which we should start reporting changes.
                           Only one of resumeAfter and _resumeAfterClusterTime should be
                           specified.  For internal use only. Deprecated in 4.0, use
                           startAtOperationTime instead.
          startAtOperationTime:
              cpp_name: startAtOperationTime
              type: timestamp
              optional: true
              description: The operation time after which we should start reporting changes.
                           Only one of resumeAfter, _resumeAfterClusterTimeDeprecated, and
                           startAtOperationTime should be specified.
          fullDocument:
              cpp_name: fullDocument
              type: string
              default: '"default"'
              description: A string '"updateLookup"' or '"default"', indicating whether or not we
                           should return a full document or just changes for an update.
          allChangesForCluster:
              cpp_name: allChangesForCluster
              type: bool
              default: false
              description: A flag indicating whether the stream should report all changes that occur
                           on the deployment, aside from those on internal databases or collections.

  ListSessionsUser:
    description: "A struct representing a $listSessions/$listLocalSessions User"
    strict: true
    fields:
      user: string
      db: string

  ListSessionsSpec:
    description: "$listSessions and $listLocalSessions pipeline spec"
    strict: true
    fields:
      allUsers:
        type: bool
        default: false
      users:
        type: array<ListSessionsUser>
        optional: true
