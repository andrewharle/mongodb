test_kind: js_test

selector:
  roots:
  - jstests/change_streams/**/*.js
  exclude_files:
  # This test starts a parallel shell which we want to read from the same node as the change stream,
  # but the parallel shell performs an insert which will not work against the secondary.
  - jstests/change_streams/only_wake_getmore_for_relevant_changes.js
  # This test is not expected to work when run against a mongos.
  - jstests/change_streams/report_latest_observed_oplog_timestamp.js
  exclude_with_any_tags:
  ##
  # The next tags correspond to the special errors thrown by the
  # set_read_and_write_concerns.js override when it refuses to replace the readConcern or
  # writeConcern of a particular command. Above each tag are the message(s) that cause the tag to be
  # warranted.
  ##
  # "Cowardly refusing to override write concern of command: ..."
  - assumes_write_concern_unchanged
  # "Cowardly refusing to run test with overridden write concern when it uses a command that can
  #  only perform w=1 writes: ..."
  - requires_eval_command
  ##
  # The next tag corresponds to the special error thrown by the set_read_preference_secondary.js
  # override when it refuses to replace the readPreference of a particular command. Above each tag
  # are the message(s) that cause the tag to be warranted.
  ##
  # "Cowardly refusing to override read preference of command: ..."
  # "Cowardly refusing to run test with overridden read preference when it reads from a
  #  non-replicated collection: ..."
  - assumes_read_preference_unchanged
  # Transactions not supported on sharded cluster.
  - uses_transactions
  # Not relevant for whole-cluster change streams.
  - do_not_run_in_whole_cluster_passthrough

executor:
  archive:
    hooks:
      - CheckReplDBHash
      - ValidateCollections
  config:
    shell_options:
      global_vars:
        TestData:
          defaultReadConcernLevel: null
      eval: >-
        var testingReplication = true;
        load('jstests/libs/override_methods/set_read_and_write_concerns.js');
        load('jstests/libs/override_methods/set_read_preference_secondary.js');
        load('jstests/libs/override_methods/implicit_whole_cluster_changestreams.js');
  hooks:
  - class: CheckReplDBHash
  - class: ValidateCollections
  - class: CleanEveryN
    n: 20
  fixture:
    class: ShardedClusterFixture
    mongos_options:
      set_parameters:
        enableTestCommands: 1
        logComponentVerbosity:
          verbosity: 0
          command: 1
          network:
            verbosity: 1
            asio: 2
          tracking: 0
    mongod_options:
      nopreallocj: ''
      set_parameters:
        enableTestCommands: 1
        logComponentVerbosity:
          verbosity: 0
          command: 1
          query: 1
          replication: 3
        numInitialSyncAttempts: 1
    # This suite requires w:"majority" writes to be applied on all shard secondaries.
    # By setting shards to two node replsets and having secondaries vote, the majority
    # is all voting nodes. TODO: use causal consistency instead (SERVER-32791).
    num_rs_nodes_per_shard: 2
    shard_options:
      voting_secondaries: true
