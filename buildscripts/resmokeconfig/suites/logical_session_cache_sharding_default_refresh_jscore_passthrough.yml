test_kind: js_test

selector:
  roots:
  - jstests/core/**/*.js
  exclude_files:
  # In MongoDB 4.0, transactions are not supported in sharded clusters.
  - jstests/core/txns/**/*.js
  # The following tests fail because a certain command or functionality is not supported by
  # mongos. This command or functionality is placed in a comment next to the failing test.
  - jstests/core/apitest_db.js  # serverStatus output doesn't have storageEngine.
  - jstests/core/apitest_db_profile_level.js  # profiling.
  - jstests/core/apply_ops*.js  # applyOps, SERVER-1439.
  - jstests/core/awaitdata_getmore_cmd.js  # capped collections.
  - jstests/core/bypass_doc_validation.js  # copyDatabase
  - jstests/core/capped*.js  # capped collections.
  - jstests/core/check_shard_index.js  # checkShardingIndex.
  - jstests/core/collection_truncate.js  # emptycapped.
  - jstests/core/collmod_without_uuid.js # applyOps, SERVER-1439
  - jstests/core/compact_keeps_indexes.js  # compact.
  - jstests/core/currentop.js  # uses fsync.
  - jstests/core/auth_copydb.js # copyDatabase.
  - jstests/core/copydb.js # copyDatabase.
  - jstests/core/dbadmin.js  # "local" database.
  - jstests/core/dbhash.js  # dbhash.
  - jstests/core/dbhash2.js  # dbhash.
  - jstests/core/diagdata.js # Command not supported in mongos
  - jstests/core/do_txn*.js  # doTxn
  - jstests/core/dropdb_race.js  # syncdelay.
  - jstests/core/evalb.js  # profiling.
  - jstests/core/fsync.js  # uses fsync.
  - jstests/core/geo_haystack*.js  # geoSearch.
  - jstests/core/geo_s2cursorlimitskip.js  # profiling.
  - jstests/core/geo_update_btree2.js  # notablescan.
  - jstests/core/index_bigkeys_nofail.js  # failIndexKeyTooLong.
  - jstests/core/index_bigkeys_validation.js  # failIndexKeyTooLong.
  - jstests/core/index_id_options.js  # "local" database.
  - jstests/core/index9.js  # "local" database.
  - jstests/core/max_time_ms.js  # sleep, SERVER-2212.
  - jstests/core/mr_replaceIntoDB.js  # MapReduceResult, SERVER-20495.
  - jstests/core/notablescan.js  # notablescan.
  - jstests/core/profile*.js  # profiling.
  - jstests/core/queryoptimizera.js  # "local" database. 
  - jstests/core/rename*.js # renameCollection.
  - jstests/core/repair_database.js # repairDatabase
  - jstests/core/repair_database_input_validation.js # repairDatabase
  - jstests/core/repair_server12955.js # repairDatabase
  - jstests/core/stages*.js  # stageDebug.
  - jstests/core/startup_log.js  # "local" database.
  - jstests/core/tailable_cursor_invalidation.js # capped collections.
  - jstests/core/tailable_getmore_batch_size.js # capped collections.
  - jstests/core/tailable_skip_limit.js # capped collections.
  - jstests/core/top.js  # top.
  # The following tests fail because mongos behaves differently from mongod when testing certain
  # functionality. The differences are in a comment next to the failing test.
  - jstests/core/explain_missing_database.js  # Behavior with no db different on mongos, SERVER-18047.
  - jstests/core/geo_2d_explain.js  # executionSuccess in different spot in explain().
  - jstests/core/geo_s2explain.js  # inputStage in different spot in explain().
  - jstests/core/geo_s2sparse.js  # keysPerIndex in different spot in validate().
  - jstests/core/operation_latency_histogram.js  # Stats are counted differently on mongos, SERVER-24880.
  # Test expects to run against a standalone, but shards in this passthrough are repl sets.
  - jstests/core/read_after_optime.js
  # The following tests fail because they count indexes. These counts do not take into account the
  # additional hashed shard key indexes that are automatically added by this passthrough.
  - jstests/core/apitest_dbcollection.js
  - jstests/core/bad_index_plugin.js
  - jstests/core/create_indexes.js
  - jstests/core/indexOtherNamespace.js
  - jstests/core/list_indexes_non_existent_ns.js
  - jstests/core/rename6.js
  # The following tests fail because they expect no databases to be created. However a DB is created
  # automatically when we shard a collection.
  - jstests/core/dbcase.js
  - jstests/core/dbcase2.js
  - jstests/core/no_db_created.js
  - jstests/core/ns_length.js
  - jstests/core/views/*.js # Views tests aren't expected to work when collections are implicitly sharded.
  - jstests/core/killop_drop_collection.js # Uses fsyncLock.
  # These tests fail because sharded clusters do not clean up correctly after failed index builds.
  # See SERVER-33207 as an example.
  - jstests/core/geo_borders.js
  # These tests expect the logical session cache refresh thread to be turned off, so that refreshes
  # can be triggered deterministically.
  - jstests/core/list_all_local_sessions.js
  - jstests/core/list_all_sessions.js
  - jstests/core/list_local_sessions.js
  - jstests/core/list_sessions.js
  # TODO: Remove after fixing SERVER-32555. executionStats.nReturned is incorrect for sharded
  # queries with a limit or for distinct commands.
  - jstests/core/distinct_index1.js
  - jstests/core/explain1.js
  - jstests/core/explain4.js
  - jstests/core/sortk.js
  # TODO: Remove after fixing SERVER-32563. The implementation of explain for the count command is
  # incorrect on sharded collections.
  - jstests/core/explain_count.js
  # TODO: Remove after fixing SERVER-14324. mapReduce behaves unpredictably when the out collection
  # is sharded on anything other than {_id: 1}.
  - jstests/core/mr_undef.js
  # TODO SERVER-32311: These tests use plan stage helpers which can't handle sharded explain output.
  - jstests/core/expr_index_use.js
  - jstests/core/index_multikey.js
  - jstests/core/optimized_match_explain.js
  - jstests/core/sort_array.js
  # TODO: SERVER-16605
  - jstests/core/mr_index.js
  - jstests/core/mr1.js
  - jstests/core/mr3.js
  - jstests/core/mr4.js
  - jstests/core/mr5.js
  exclude_with_any_tags:
  - assumes_against_mongod_not_mongos
  # Tests tagged with the following will fail because they assume collections are not sharded.
  - assumes_no_implicit_collection_creation_after_drop
  - assumes_no_implicit_index_creation
  - assumes_unsharded_collection
  - cannot_create_unique_index_when_using_hashed_shard_key

executor:
  archive:
    hooks:
      - CheckReplDBHash
      - ValidateCollections
  config:
    shell_options:
      readMode: commands
      eval: load("jstests/libs/override_methods/implicitly_shard_accessed_collections.js")
  hooks:
  - class: CheckReplDBHash
  - class: ValidateCollections
  - class: CleanEveryN
    n: 20
  fixture:
    class: ShardedClusterFixture
    num_shards: 2
    enable_balancer: false
    mongos_options:
      set_parameters:
        enableTestCommands: 1
        disableLogicalSessionCacheRefresh: false
    mongod_options:
      set_parameters:
        enableTestCommands: 1
        numInitialSyncAttempts: 1
        disableLogicalSessionCacheRefresh: false