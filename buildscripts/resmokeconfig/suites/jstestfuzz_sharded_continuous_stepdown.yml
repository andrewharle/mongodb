test_kind: js_test

selector:
  roots:
  - jstestfuzz/out/*.js

executor:
  archive:
    hooks:
      - CheckReplDBHash
      - ValidateCollections
  config:
    shell_options:
      readMode: commands
      global_vars:
        TestData:
          runningWithConfigStepdowns: true
          runningWithShardStepdowns: true
          usingReplicaSetShards: true
  hooks:
  - class: ContinuousStepdown
    config_stepdown: true
    shard_stepdown: true
  # The CheckReplDBHash hook waits until all operations have replicated to and have been applied
  # on the secondaries, so we run the ValidateCollections hook after it to ensure we're
  # validating the entire contents of the collection.
  - class: CheckReplDBHash
    shell_options:
      global_vars:
        TestData:
          skipValidationOnInvalidViewDefinitions: true
  - class: ValidateCollections
    shell_options:
      global_vars:
        TestData:
          skipValidationOnInvalidViewDefinitions: true
  fixture:
    class: ShardedClusterFixture
    mongos_options:
      set_parameters:
        enableTestCommands: 1
    mongod_options:
      set_parameters:
        disableLogicalSessionCacheRefresh: false
        enableTestCommands: 1
        numInitialSyncAttempts: 1
        transactionLifetimeLimitSeconds: 1
        writePeriodicNoops: 1
        enableElectionHandoff: 0
    num_rs_nodes_per_shard: 3
    num_shards: 2
    configsvr_options:
      num_nodes: 3
      all_nodes_electable: true
      replset_config_options:
        settings:
          catchUpTimeoutMillis: 0
    shard_options:
      all_nodes_electable: true
      replset_config_options:
        settings:
          catchUpTimeoutMillis: 0
